{"ast":null,"code":"var _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => {\n  var _ref;\n\n  let {\n    0: status,\n    1: setStatus\n  } = useState('stop');\n\n  function setSlider(value) {\n    if (value > 0) {\n      setStatus('stop');\n    } else {\n      setStatus('play');\n    }\n\n    if (value > 0) {\n      document.querySelector('.react-audio-player').volume = parseFloat(value);\n    }\n\n    console.log(value);\n  }\n\n  function toggle() {\n    let audio = document.querySelector('.react-audio-player');\n\n    if (audio.volume <= 0) {\n      audio.volume = 1;\n      audio.muted = false;\n      setStatus('stop');\n    } else {\n      audio.volume = 0.0;\n      audio.muted = true;\n      setStatus('play');\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ReactAudioPlayer, {\n    src: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n    autoPlay: true,\n    controls: true,\n    listenInterval: \"1000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"radial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-status-avatar\",\n    style: {\n      backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${props.radio.servertitle}&direction=2&head_direction=2&gesture=sml&size=b)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"radio-status-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, props.radio.servertitle), __jsx(\"div\", {\n    className: \"radio-status-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, props.radio.servergenre)), __jsx(ReactSlider, {\n    className: \"radio-slider\",\n    trackClassName: \"radio-slider-control\",\n    onChange: value => setSlider(value / 100),\n    min: 0,\n    defaultValue: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"radio-status-data-listeners\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, (_ref = props.radio.currentlisteners == 0) !== null && _ref !== void 0 ? _ref : 1, __jsx(\"div\", {\n    className: \"radio-status-data-listeners-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"ouvintes\"))), __jsx(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"vacancies\",\n    onClick: () => alert('Not now!'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Vagas\"), __jsx(\"div\", {\n    className: `control ${status}`,\n    onClick: () => toggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"team\",\n    onClick: () => alert('Not now!'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Equipe\"))));\n};\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n  const data = await res.json();\n  return {\n    radio: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["useState","useEffect","ReactAudioPlayer","ReactSlider","fetch","Index","props","status","setStatus","setSlider","value","document","querySelector","volume","parseFloat","console","log","toggle","audio","muted","backgroundImage","radio","servertitle","servergenre","currentlisteners","alert","getInitialProps","res","data","json"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport ReactSlider from 'react-slider';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Index = props => {\r\n    let [status, setStatus] = useState('stop');\r\n\r\n    function setSlider(value) {\r\n        if(value > 0) {\r\n            setStatus('stop');\r\n        } else {\r\n            setStatus('play');\r\n        }\r\n\r\n        if(value > 0) {\r\n            document.querySelector('.react-audio-player').volume = parseFloat(value);\r\n        }\r\n\r\n        console.log(value);\r\n    }\r\n\r\n    function toggle() {\r\n        let audio = document.querySelector('.react-audio-player');\r\n        \r\n        if(audio.volume <= 0) {\r\n            audio.volume = 1;\r\n            audio.muted = false;\r\n            setStatus('stop');\r\n        } else {\r\n            audio.volume = 0.0;\r\n            audio.muted = true;\r\n            setStatus('play');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ReactAudioPlayer\r\n                src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                autoPlay\r\n                controls\r\n                listenInterval={\"1000\"}\r\n            />\r\n\r\n            <div className=\"background\"></div>\r\n            <div className=\"radial\"></div>\r\n\r\n            <div className=\"player\">\r\n                <div className=\"radio-status\">\r\n                    <div className=\"radio-status-avatar\" style={{ backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${props.radio.servertitle}&direction=2&head_direction=2&gesture=sml&size=b)` }}></div>\r\n                    <div className=\"radio-status-data\">{props.radio.servertitle}</div>\r\n                    <div className=\"radio-status-data\">{props.radio.servergenre}</div>\r\n                </div>\r\n\r\n                {/* <RadioSlider /> */}\r\n                <ReactSlider\r\n                    className=\"radio-slider\"\r\n                    trackClassName=\"radio-slider-control\"\r\n                    onChange={(value) => setSlider(value / 100)}\r\n                    min={0}\r\n                    defaultValue={100}\r\n                />\r\n\r\n                <div className=\"radio-status-data-listeners\">\r\n                    {props.radio.currentlisteners == 0 ?? 1}\r\n                    <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n                <div className=\"logo\">\r\n                    <div className=\"vacancies\" onClick={() => alert('Not now!')}>Vagas</div>\r\n                    <div className={`control ${status}`} onClick={() => toggle() }></div>\r\n                    <div className=\"team\" onClick={() => alert('Not now!')}>Equipe</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nIndex.getInitialProps = async function() {\r\n    const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\r\n    const data = await res.json();\r\n  \r\n    return {\r\n        radio: data\r\n    };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}