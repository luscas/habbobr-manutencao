{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Desktop/habbobr-manutencao/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport ReactHowler from 'react-howler'; // import ReactAudioPlayer from 'react-audio-player';\n\nimport ReactSlider from 'react-slider';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n      status: 'stop',\n      format: ['mp3', 'acc'],\n      volume: 100\n    };\n  }\n\n  radioNewStatus(type, newText) {\n    switch (type) {\n      case 'avatar':\n        document.setProperty('--avatar', `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${newText}&action=std&direction=2&head_direction=3&gesture=spk&size=b)`); // document.querySelector('.radio-status-avatar').style.backgroundImage = `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${newText}&action=std&direction=2&head_direction=3&gesture=spk&size=b)`;\n\n        break;\n\n      case 'locutor':\n        this.setState({\n          locutor: newText\n        });\n        document.querySelector('.ver-locutor').textContent = newText;\n        break;\n\n      case 'programa':\n        document.querySelector('.ver-programa').textContent = newText;\n        break;\n\n      case 'ouvintes':\n        document.querySelector('.ver-ouvintes').textContent = newText;\n        break;\n    }\n  }\n\n  radioUpdate(action) {\n    if (action == 'avatar' || action == 'all') {\n      this.radioNewStatus('avatar', 'AutoDJ');\n    } else {\n      this.radioNewStatus(action, '...');\n    }\n\n    fetch('https://painel.audiovox.pw/api/Njc2OCsw').then(response => response.text()).then(str => new window.DOMParser().parseFromString(str, \"text/xml\")).then(data => {\n      let status = xmlToJson(data).info;\n\n      switch (action) {\n        case 'all':\n          this.radioNewStatus('avatar', status.titulo['#text']);\n          this.radioNewStatus('locutor', status.titulo['#text']);\n          this.radioNewStatus('programa', status.genero['#text']);\n          this.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n          break;\n\n        case 'locutor':\n          this.radioNewStatus('avatar', status.titulo['#text']);\n          this.radioNewStatus('locutor', status.titulo['#text']);\n          break;\n\n        case 'programa':\n          this.radioNewStatus('programa', status.genero['#text']);\n          break;\n\n        case 'ouvintes':\n          this.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n          break;\n      }\n    });\n  }\n\n  setSlider(value) {\n    if (value > 0) {\n      this.sound.volume(parseFloat(value));\n    }\n  }\n\n  toggle() {\n    if (window.Howler._muted == true) {\n      window.Howler.mute(false);\n      this.setState({\n        status: 'stop'\n      });\n    } else {\n      window.Howler.mute(true);\n      this.setState({\n        status: 'play'\n      });\n    }\n  }\n\n  render() {\n    let {\n      stream,\n      format,\n      status,\n      volume\n    } = this.state;\n    let {\n      props\n    } = this;\n    return __jsx(React.Fragment, null, __jsx(ReactHowler, {\n      src: stream,\n      autoplay: true,\n      volume: 1.0,\n      html5: true,\n      format: format,\n      ref: ref => this.sound = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"radial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, \"...\"), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"...\")), __jsx(ReactSlider, {\n      className: \"radio-slider\",\n      trackClassName: \"radio-slider-control\",\n      onChange: value => this.setSlider(value / 100),\n      min: 0,\n      defaultValue: volume,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"radio-status-data-listeners\",\n      onClick: () => this.radioUpdate('ouvintes'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"?\", __jsx(\"div\", {\n      className: \"radio-status-data-listeners-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"ouvintes\"))), __jsx(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"vacancies\",\n      onClick: () => alert('Not now!'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"Vagas\"), __jsx(\"div\", {\n      className: `control ${status}`,\n      onClick: () => this.toggle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"team\",\n      onClick: () => alert('Not now!'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Equipe\"))));\n  }\n\n} // Index.getInitialProps = async function() {\n//     const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n//     const data = await res.json();\n//     return {\n//         radio: data\n//     };\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/lucas/Desktop/habbobr-manutencao/pages/index.js"],"names":["Component","ReactHowler","ReactSlider","Index","constructor","props","state","stream","status","format","volume","radioNewStatus","type","newText","document","setProperty","setState","locutor","querySelector","textContent","radioUpdate","action","fetch","then","response","text","str","window","DOMParser","parseFromString","data","xmlToJson","info","titulo","genero","ouvintes_conectados","setSlider","value","sound","parseFloat","toggle","Howler","_muted","mute","render","ref","alert"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ReactHowler from 'react-howler'\n// import ReactAudioPlayer from 'react-audio-player';\nimport ReactSlider from 'react-slider';\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n            status: 'stop',\n            format: ['mp3', 'acc'],\n            volume: 100\n        }\n    }\n\n    radioNewStatus(type, newText){\n        switch (type) {\n            case 'avatar':\n                document.setProperty('--avatar', `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${newText}&action=std&direction=2&head_direction=3&gesture=spk&size=b)`);\n                // document.querySelector('.radio-status-avatar').style.backgroundImage = `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${newText}&action=std&direction=2&head_direction=3&gesture=spk&size=b)`;\n            break;\n    \n            case 'locutor':\n                this.setState({\n                    locutor: newText,\n                })\n                document.querySelector('.ver-locutor').textContent = newText;\n            break;\n            case 'programa':\n                document.querySelector('.ver-programa').textContent = newText;\n            break;\n            case 'ouvintes':\n                document.querySelector('.ver-ouvintes').textContent = newText;\n            break;\n        }\n    }\n\n    radioUpdate(action) {\n        if (action == 'avatar' || action == 'all') {\n            this.radioNewStatus('avatar', 'AutoDJ');\n        } else {\n            this.radioNewStatus(action, '...');\n        }\n    \n        fetch('https://painel.audiovox.pw/api/Njc2OCsw').then(response => response.text()).then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\")).then(data => {\n            let status = xmlToJson(data).info;\n            switch (action) {\n                case 'all':\n                    this.radioNewStatus('avatar', status.titulo['#text']);\n                    this.radioNewStatus('locutor', status.titulo['#text']);\n                    this.radioNewStatus('programa', status.genero['#text']);\n                    this.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n                    break;\n                case 'locutor':\n                    this.radioNewStatus('avatar', status.titulo['#text']);\n                    this.radioNewStatus('locutor', status.titulo['#text']);\n                    break;\n                case 'programa':\n                    this.radioNewStatus('programa', status.genero['#text']);\n                    break;\n                case 'ouvintes':\n                    this.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n                    break;\n            }\n        });\n    }\n\n    setSlider(value) {\n        if(value > 0) {\n            this.sound.volume(parseFloat(value));\n        }\n    }\n\n    toggle() {\n        if(window.Howler._muted == true) {\n            window.Howler.mute(false);\n            this.setState({ status: 'stop' });\n        } else {\n            window.Howler.mute(true);\n            this.setState({ status: 'play' });\n        }\n    }\n\n    render() {\n        let { stream, format, status, volume } = this.state;\n        let { props }= this;\n\n        return (\n            <>\n                <ReactHowler\n                    src={stream}\n                    autoplay={true}\n                    volume={1.0}\n                    html5={true}\n                    format={format}\n                    ref={(ref) => (this.sound = ref)}\n                />\n\n                <div className=\"background\"></div>\n                <div className=\"radial\"></div>\n\n                <div className=\"player\">\n                    <div className=\"radio-status\">\n                        <div className=\"radio-status-avatar\"></div>\n                        <div className=\"radio-status-data\">...</div>\n                        <div className=\"radio-status-data\">...</div>\n                    </div>\n\n                    {/* <RadioSlider /> */}\n                    <ReactSlider\n                        className=\"radio-slider\"\n                        trackClassName=\"radio-slider-control\"\n                        onChange={(value) => this.setSlider(value / 100)}\n                        min={0}\n                        defaultValue={volume}\n                    />\n\n                    <div className=\"radio-status-data-listeners\" onClick={() => this.radioUpdate('ouvintes')}>\n                        ?\n                        <div className=\"radio-status-data-listeners-text\">ouvintes</div>\n                    </div>\n                </div>\n\n                <div className=\"center\">\n                    <div className=\"logo\">\n                        <div className=\"vacancies\" onClick={() => alert('Not now!')}>Vagas</div>\n                        <div className={`control ${status}`} onClick={() => this.toggle() }></div>\n                        <div className=\"team\" onClick={() => alert('Not now!')}>Equipe</div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\n// Index.getInitialProps = async function() {\n//     const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n//     const data = await res.json();\n  \n//     return {\n//         radio: data\n//     };\n// };\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}