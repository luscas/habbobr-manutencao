{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\n\nvar toggle = function toggle() {\n  var audio = document.querySelector('.react-audio-player');\n\n  if (audio.volume == 0) {\n    audio.volume = 1;\n  } else {\n    audio.volume = 0;\n  }\n};\n\nvar Index = function Index(props) {\n  var _useState = useState('stop'),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  function setSlider(value) {\n    if (value > 0) {\n      setStatus('stop');\n    } else {\n      setStatus('play');\n    }\n\n    document.querySelector('.react-audio-player').volume = parseFloat(value);\n    console.log(value);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ReactAudioPlayer, {\n    src: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n    autoPlay: true,\n    controls: true,\n    listenInterval: \"1000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"background\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"radial\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"player\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-status\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-status-avatar\",\n    style: {\n      backgroundImage: \"url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=\".concat(props.radio.servertitle, \"&direction=2&head_direction=2&gesture=sml&size=b)\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"radio-status-data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, props.radio.servertitle), __jsx(\"div\", {\n    className: \"radio-status-data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, props.radio.servergenre)), __jsx(ReactSlider, {\n    className: \"radio-slider\",\n    trackClassName: \"radio-slider-control\",\n    onChange: function onChange(value) {\n      return setSlider(value / 100);\n    },\n    defaultValue: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"radio-status-data-listeners\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, props.radio.currentlisteners, __jsx(\"div\", {\n    className: \"radio-status-data-listeners-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"ouvintes\"))), __jsx(\"div\", {\n    className: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"vacancies\",\n    onClick: function onClick() {\n      return alert('Not now!');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Vagas\"), __jsx(\"div\", {\n    className: \"control \".concat(status),\n    onClick: function onClick() {\n      return toggle();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"team\",\n    onClick: function onClick() {\n      return alert('Not now!');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Equipe\"))));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            radio: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["useState","useEffect","ReactAudioPlayer","ReactSlider","fetch","toggle","audio","document","querySelector","volume","Index","props","status","setStatus","setSlider","value","parseFloat","console","log","backgroundImage","radio","servertitle","servergenre","currentlisteners","alert","getInitialProps","res","json","data"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport ReactSlider from 'react-slider';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nlet toggle = () => {\r\n    let audio = document.querySelector('.react-audio-player');\r\n    \r\n    if(audio.volume == 0) {\r\n        audio.volume = 1;\r\n    } else {\r\n        audio.volume = 0;\r\n    }\r\n}\r\n\r\nconst Index = props => {\r\n    let [status, setStatus] = useState('stop');\r\n\r\n    function setSlider(value) {\r\n        if(value > 0) {\r\n            setStatus('stop');\r\n        } else {\r\n            setStatus('play');\r\n        }\r\n\r\n        document.querySelector('.react-audio-player').volume = parseFloat(value);\r\n\r\n        console.log(value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ReactAudioPlayer\r\n                src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                autoPlay\r\n                controls\r\n                listenInterval={\"1000\"}\r\n            />\r\n\r\n            <div className=\"background\"></div>\r\n            <div className=\"radial\"></div>\r\n\r\n            <div className=\"player\">\r\n                <div className=\"radio-status\">\r\n                    <div className=\"radio-status-avatar\" style={{ backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${props.radio.servertitle}&direction=2&head_direction=2&gesture=sml&size=b)` }}></div>\r\n                    <div className=\"radio-status-data\">{props.radio.servertitle}</div>\r\n                    <div className=\"radio-status-data\">{props.radio.servergenre}</div>\r\n                </div>\r\n\r\n                {/* <RadioSlider /> */}\r\n                <ReactSlider\r\n                    className=\"radio-slider\"\r\n                    trackClassName=\"radio-slider-control\"\r\n                    onChange={(value) => setSlider(value / 100)}\r\n                    defaultValue={100}\r\n                />\r\n\r\n                <div className=\"radio-status-data-listeners\">\r\n                    {props.radio.currentlisteners}\r\n                    <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n                <div className=\"logo\">\r\n                    <div className=\"vacancies\" onClick={() => alert('Not now!')}>Vagas</div>\r\n                    <div className={`control ${status}`} onClick={() => toggle() }></div>\r\n                    <div className=\"team\" onClick={() => alert('Not now!')}>Equipe</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nIndex.getInitialProps = async function() {\r\n    const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\r\n    const data = await res.json();\r\n  \r\n    return {\r\n        radio: data\r\n    };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}