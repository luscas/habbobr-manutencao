{"ast":null,"code":"var _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react'; // import ReactAudioPlayer from 'react-audio-player';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      audio: null\n    };\n  }\n\n  componentDidMount() {\n    let streamURL = \"https://player.audiovox.pw/proxy/6768/;\";\n    let audio = document.getElementById(\"main-stream\");\n    this.setState({\n      audio: document.getElementById(\"main-stream\")\n    });\n    audio.innerHTML = '<source id=\"main-stream-source\" src=\"' + streamURL + '\">';\n  }\n\n  play() {\n    let audio = this.state.audio;\n    var promise = audio.play();\n    audio.volume = 1;\n    audio.muted = false;\n\n    if (promise !== undefined) {\n      promise.then(_ => {\n        console.log(\"[PlayerFrame] Play successful\");\n        localStorage.setItem('radio_play', 'allowed');\n      }).catch(error => {\n        console.log(\"[PlayerFrame] Play failed\", error);\n        localStorage.setItem('radio_play', 'not_allowed');\n      });\n    }\n  }\n\n  pause() {\n    let audio = this.state.audio;\n    audio.volume = 0;\n    audio.muted = true;\n    localStorage.setItem('radio_play', 'paused');\n  }\n\n  toggle() {\n    let audio = this.state.audio;\n\n    if (audio.volume == 0 || audio.muted == true) {\n      audio.volume = 1.0;\n    } else {\n      audio.volume = 0;\n      audio.muted = true;\n    }\n  }\n\n  render() {\n    // let toggle = () => {\n    //     let el = document.querySelector('.react-audio-player');\n    //     if(el.volume == 0) {\n    //         el.volume = 1.0;\n    //     } else {\n    //         el.volume = 0;\n    //     }\n    // }\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"radial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, \"AutoDJ\"), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, \"Zona Livre\")), __jsx(\"div\", {\n      className: \"radio-slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-slider-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"radio-status-data-listeners\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"7\", __jsx(\"div\", {\n      className: \"radio-status-data-listeners-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"ouvintes\"))), __jsx(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"vacancies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Vagas\"), __jsx(\"div\", {\n      className: \"control play\",\n      onClick: () => this.toggle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }), __jsx(\"div\", {\n      className: \"team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, \"Equipe\")))), __jsx(\"audio\", {\n      id: \"main-stream\",\n      preload: \"none\",\n      type: \"audio/mp3\",\n      volume: \"0\",\n      muted: true,\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["Component","Index","constructor","props","state","audio","componentDidMount","streamURL","document","getElementById","setState","innerHTML","play","promise","volume","muted","undefined","then","_","console","log","localStorage","setItem","catch","error","pause","toggle","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\n// import ReactAudioPlayer from 'react-audio-player';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            audio: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let streamURL = \"https://player.audiovox.pw/proxy/6768/;\";\r\n        let audio = document.getElementById(\"main-stream\");\r\n\r\n        this.setState({\r\n            audio: document.getElementById(\"main-stream\")\r\n        })\r\n\r\n        audio.innerHTML = '<source id=\"main-stream-source\" src=\"' + streamURL + '\">';\r\n    }\r\n\r\n    play() {\r\n        let audio = this.state.audio;\r\n        var promise = audio.play();\r\n        audio.volume = 1;\r\n        audio.muted = false;\r\n\r\n        if (promise !== undefined) {\r\n            promise.then(_ => {\r\n                console.log(\"[PlayerFrame] Play successful\");\r\n\r\n                localStorage.setItem('radio_play', 'allowed');\r\n            }).catch(error => {\r\n                console.log(\"[PlayerFrame] Play failed\", error);\r\n\r\n                localStorage.setItem('radio_play', 'not_allowed');\r\n            });\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        let audio = this.state.audio;\r\n        audio.volume = 0;\r\n        audio.muted = true;\r\n\r\n        localStorage.setItem('radio_play', 'paused');\r\n    }\r\n\r\n    toggle() {\r\n        let audio = this.state.audio;\r\n        if(audio.volume == 0 || audio.muted == true) {\r\n            audio.volume = 1.0;\r\n        } else {\r\n            audio.volume = 0;\r\n            audio.muted = true;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // let toggle = () => {\r\n        //     let el = document.querySelector('.react-audio-player');\r\n\r\n        //     if(el.volume == 0) {\r\n        //         el.volume = 1.0;\r\n        //     } else {\r\n        //         el.volume = 0;\r\n        //     }\r\n        // }\r\n        return (\r\n            <>\r\n                <div className=\"background\"></div>\r\n                <div className=\"radial\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"player\">\r\n                        <div className=\"radio-status\">\r\n                            <div className=\"radio-status-data\">AutoDJ</div>\r\n                            <div className=\"radio-status-data\">Zona Livre</div>\r\n                        </div>\r\n\r\n                        <div className=\"radio-slider\">\r\n                            <div className=\"radio-slider-control\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"radio-status-data-listeners\">\r\n                            7\r\n                            <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"center\">\r\n                        <div className=\"logo\">\r\n                            <div className=\"vacancies\">Vagas</div>\r\n                            <div className=\"control play\" onClick={() => this.toggle() }></div>\r\n                            <div className=\"team\">Equipe</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <ReactAudioPlayer\r\n                    src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                    autoPlay\r\n                    controls\r\n                    ref={this.state.audio}\r\n                /> */}\r\n\r\n                <audio id=\"main-stream\" preload=\"none\" type=\"audio/mp3\" volume=\"0\" muted controls />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}