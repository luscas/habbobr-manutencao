{"ast":null,"code":"var _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\n\nlet toggle = () => {\n  let audio = document.querySelector('.react-audio-player');\n\n  if (audio.volume == 0) {\n    audio.volume = 1;\n    className = 'stop';\n  } else {\n    audio.volume = 0;\n    className = 'play';\n  }\n};\n\nlet className = 'stop';\n\nconst Index = props => {\n  return __jsx(React.Fragment, null, __jsx(ReactAudioPlayer, {\n    src: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n    autoPlay: true,\n    controls: true,\n    listenInterval: \"1000\",\n    ref: element => {\n      player = element;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"radial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-status-avatar\",\n    style: {\n      backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${props.radio.servertitle}&direction=2&head_direction=2&gesture=sml&size=b)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"radio-status-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, props.radio.servertitle), __jsx(\"div\", {\n    className: \"radio-status-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, props.radio.servergenre)), __jsx(ReactSlider, {\n    className: \"radio-slider\",\n    trackClassName: \"radio-slider-control\",\n    onChange: value => document.querySelector('.react-audio-player').volume = value / 100,\n    defaultValue: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"radio-status-data-listeners\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, props.radio.currentlisteners, __jsx(\"div\", {\n    className: \"radio-status-data-listeners-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"ouvintes\"))), __jsx(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"vacancies\",\n    onClick: () => alert('Not now!'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Vagas\"), __jsx(\"div\", {\n    className: `control ${className}`,\n    onClick: () => toggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"team\",\n    onClick: () => alert('Not now!'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Equipe\"))));\n};\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n  const data = await res.json();\n  return {\n    radio: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["useState","useEffect","ReactAudioPlayer","ReactSlider","fetch","toggle","audio","document","querySelector","volume","className","Index","props","element","player","backgroundImage","radio","servertitle","servergenre","value","currentlisteners","alert","getInitialProps","res","data","json"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAIC,MAAM,GAAG,MAAM;AACf,MAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAZ;;AAEA,MAAGF,KAAK,CAACG,MAAN,IAAgB,CAAnB,EAAsB;AAClBH,IAAAA,KAAK,CAACG,MAAN,GAAe,CAAf;AACAC,IAAAA,SAAS,GAAG,MAAZ;AACH,GAHD,MAGO;AACHJ,IAAAA,KAAK,CAACG,MAAN,GAAe,CAAf;AACAC,IAAAA,SAAS,GAAG,MAAZ;AACH;AACJ,CAVD;;AAYA,IAAIA,SAAS,GAAG,MAAhB;;AACA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,SACI,4BACI,MAAC,gBAAD;AACI,IAAA,GAAG,EAAC,iDADR;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,cAAc,EAAE,MAJpB;AAKI,IAAA,GAAG,EAAGC,OAAD,IAAa;AAAEC,MAAAA,MAAM,GAAGD,OAAT;AAAiB,KALzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAYI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,KAAK,EAAE;AAAEE,MAAAA,eAAe,EAAG,8EAA6EH,KAAK,CAACI,KAAN,CAAYC,WAAY;AAAzH,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCL,KAAK,CAACI,KAAN,CAAYC,WAAhD,CAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCL,KAAK,CAACI,KAAN,CAAYE,WAAhD,CAHJ,CADJ,EAQI,MAAC,WAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,cAAc,EAAC,sBAFnB;AAGI,IAAA,QAAQ,EAAGC,KAAD,IAAWZ,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,EAA8CC,MAA9C,GAAwDU,KAAK,GAAG,GAHzF;AAII,IAAA,YAAY,EAAE,GAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAeI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACI,KAAN,CAAYI,gBADjB,EAEI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAfJ,CAZJ,EAiCI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,MAAMC,KAAK,CAAC,UAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAK,IAAA,SAAS,EAAG,WAAUX,SAAU,EAArC;AAAwC,IAAA,OAAO,EAAE,MAAML,MAAM,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAE,MAAMgB,KAAK,CAAC,UAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,CAjCJ,CADJ;AA2CH,CA5CD;;AA8CAV,KAAK,CAACW,eAAN,GAAwB,kBAAiB;AACrC,QAAMC,GAAG,GAAI,MAAMnB,KAAK,CAAC,kDAAD,CAAxB;AACA,QAAMoB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AACHT,IAAAA,KAAK,EAAEQ;AADJ,GAAP;AAGH,CAPD;;AASA,eAAeb,KAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport ReactSlider from 'react-slider';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nlet toggle = () => {\r\n    let audio = document.querySelector('.react-audio-player');\r\n    \r\n    if(audio.volume == 0) {\r\n        audio.volume = 1;\r\n        className = 'stop';\r\n    } else {\r\n        audio.volume = 0;\r\n        className = 'play';\r\n    }\r\n}\r\n\r\nlet className = 'stop';\r\nconst Index = props => {\r\n    return (\r\n        <>\r\n            <ReactAudioPlayer\r\n                src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                autoPlay\r\n                controls\r\n                listenInterval={\"1000\"}\r\n                ref={(element) => { player = element}}\r\n            />\r\n\r\n            <div className=\"background\"></div>\r\n            <div className=\"radial\"></div>\r\n\r\n            <div className=\"player\">\r\n                <div className=\"radio-status\">\r\n                    <div className=\"radio-status-avatar\" style={{ backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${props.radio.servertitle}&direction=2&head_direction=2&gesture=sml&size=b)` }}></div>\r\n                    <div className=\"radio-status-data\">{props.radio.servertitle}</div>\r\n                    <div className=\"radio-status-data\">{props.radio.servergenre}</div>\r\n                </div>\r\n\r\n                {/* <RadioSlider /> */}\r\n                <ReactSlider\r\n                    className=\"radio-slider\"\r\n                    trackClassName=\"radio-slider-control\"\r\n                    onChange={(value) => document.querySelector('.react-audio-player').volume = (value / 100)}\r\n                    defaultValue={100}\r\n                />\r\n\r\n                <div className=\"radio-status-data-listeners\">\r\n                    {props.radio.currentlisteners}\r\n                    <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n                <div className=\"logo\">\r\n                    <div className=\"vacancies\" onClick={() => alert('Not now!')}>Vagas</div>\r\n                    <div className={`control ${className}`} onClick={() => toggle() }></div>\r\n                    <div className=\"team\" onClick={() => alert('Not now!')}>Equipe</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nIndex.getInitialProps = async function() {\r\n    const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\r\n    const data = await res.json();\r\n  \r\n    return {\r\n        radio: data\r\n    };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}