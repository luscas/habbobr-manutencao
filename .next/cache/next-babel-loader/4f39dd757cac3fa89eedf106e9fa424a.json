{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      audio: null,\n      isPlaying: false\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var colors = ['#34BAE7', '#7ACF25', '#FF2F34', '#F935EA', '#CEAE31', '#999999'];\n      var last = 0;\n\n      var changeColor = function changeColor(color) {\n        return document.querySelector('body').style.backgroundColor = color;\n      };\n\n      changeColor(colors[colors.length - 1]);\n      setInterval(function () {\n        if (last == colors.length) {\n          last = 0;\n        }\n\n        changeColor(colors[last]);\n        last++;\n      }, 500);\n      this.state.audio.addEventListener('timeupdate', this.ontimeupdate);\n    }\n  }, {\n    key: \"ontimeupdate\",\n    value: function ontimeupdate() {\n      var el = this.state.audio;\n      var number = el.currentTime / el.duration * 100;\n      this.update(number);\n\n      if (number === 100) {\n        return this.setState({\n          isPlaying: false\n        });\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(e) {\n      e.preventDefault();\n      var state = this.state.audio;\n      var isPlaying = this.state.isPlaying;\n      this.setState({\n        isPlaying: !isPlaying\n      });\n\n      if (isPlaying) {\n        return state.pause();\n      }\n\n      return state.play();\n    }\n  }, {\n    key: \"update\",\n    value: function update(progress) {\n      var context = this.refs.manager.getDOMNode().getContext('2d');\n      var percent = Math.min(progress, 100);\n      var ratio = window.devicePixelRatio || 1;\n      var size = this.refs.manager.getDOMNode().width / ratio;\n      var half = size / 2;\n      var x = half;\n      var y = half;\n      var rad = half - 1;\n      var angle = Math.PI * 2 * (percent / 100);\n      context.clearRect(0, 0, size, size);\n      context.strokeStyle = '#00bbff';\n      context.beginPath();\n      context.arc(x, y, rad, 0, angle, false);\n      context.stroke();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var className = this.state.isPlaying ? 'control stop' : 'control play';\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"radial\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"player\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      }, \"AutoDJ\"), __jsx(\"div\", {\n        className: \"radio-status-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }, \"Zona Livre\")), __jsx(\"div\", {\n        className: \"radio-slider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-slider-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"radio-status-data-listeners\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, \"7\", __jsx(\"div\", {\n        className: \"radio-status-data-listeners-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, \"ouvintes\"))), __jsx(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"vacancies\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }, \"Vagas\"), __jsx(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        className: \"team\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, \"Equipe\")))), __jsx(ReactAudioPlayer, {\n        src: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n        autoPlay: true,\n        ref: function ref(element) {\n          _this2.setState({\n            audio: element\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["Component","ReactAudioPlayer","Index","props","state","audio","isPlaying","colors","last","changeColor","color","document","querySelector","style","backgroundColor","length","setInterval","addEventListener","ontimeupdate","el","number","currentTime","duration","update","setState","e","preventDefault","pause","play","progress","context","refs","manager","getDOMNode","getContext","percent","Math","min","ratio","window","devicePixelRatio","size","width","half","x","y","rad","angle","PI","clearRect","strokeStyle","beginPath","arc","stroke","className","element"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            audio: null,\r\n            isPlaying: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let colors = ['#34BAE7', '#7ACF25', '#FF2F34', '#F935EA', '#CEAE31', '#999999'];\r\n        let last = 0;\r\n\r\n        let changeColor = (color) => document.querySelector('body').style.backgroundColor = color;\r\n\r\n        changeColor(colors[colors.length - 1]);\r\n\r\n        setInterval(function() {\r\n            if(last == colors.length) {\r\n                last = 0;\r\n            }\r\n            \r\n            changeColor(colors[last]);\r\n\r\n            last++;\r\n        }, 500);\r\n\r\n        this.state.audio.addEventListener('timeupdate', this.ontimeupdate);\r\n    }\r\n\r\n    ontimeupdate() {\r\n        var el = this.state.audio;\r\n        var number = el.currentTime / el.duration * 100;\r\n\r\n        this.update(number);\r\n\r\n        if (number === 100) {\r\n            return this.setState({\r\n                isPlaying: false\r\n            });\r\n        }\r\n    }\r\n\r\n    toggle(e) {\r\n        e.preventDefault();\r\n        var state = this.state.audio;\r\n        var isPlaying = this.state.isPlaying;\r\n\r\n        this.setState({\r\n            isPlaying: !isPlaying\r\n        });\r\n\r\n        if (isPlaying) {\r\n            return state.pause();\r\n        }\r\n        return state.play();\r\n    }\r\n\r\n    update(progress) {\r\n        var context = this.refs.manager.getDOMNode().getContext('2d');\r\n\r\n        var percent = Math.min(progress, 100);\r\n        var ratio = window.devicePixelRatio || 1;\r\n\r\n        var size = this.refs.manager.getDOMNode().width / ratio;\r\n        var half = size / 2;\r\n        var x = half;\r\n        var y = half;\r\n        var rad = half - 1;\r\n\r\n        var angle = Math.PI * 2 * (percent / 100);\r\n        context.clearRect(0, 0, size, size);\r\n\r\n        context.strokeStyle = '#00bbff';\r\n        context.beginPath();\r\n        context.arc(x, y, rad, 0, angle, false);\r\n        context.stroke();\r\n    }\r\n\r\n    render() {\r\n        var className = this.state.isPlaying ? 'control stop' : 'control play';\r\n\r\n        return (\r\n            <>\r\n                <div className=\"background\"></div>\r\n                <div className=\"radial\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"player\">\r\n                        <div className=\"radio-status\">\r\n                            <div className=\"radio-status-data\">AutoDJ</div>\r\n                            <div className=\"radio-status-data\">Zona Livre</div>\r\n                        </div>\r\n\r\n                        <div className=\"radio-slider\">\r\n                            <div className=\"radio-slider-control\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"radio-status-data-listeners\">\r\n                            7\r\n                            <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"center\">\r\n                        <div className=\"logo\">\r\n                            <div className=\"vacancies\">Vagas</div>\r\n                            <div className={className}></div>\r\n                            <div className=\"team\">Equipe</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <ReactAudioPlayer\r\n                    src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                    autoPlay\r\n                    ref={(element) => { this.setState({ audio: element }) }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}