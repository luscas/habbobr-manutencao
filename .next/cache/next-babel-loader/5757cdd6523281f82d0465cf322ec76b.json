{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lucas/Desktop/habbobr-manutencao/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport ReactHowler from 'react-howler';\nimport ReactTooltip from \"react-tooltip\";\nimport ReactSlider from 'react-slider';\nimport xmlToJson from '../helpers/xmlToJson';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n      status: 'stop',\n      format: ['mp3', 'acc'],\n      volume: 100,\n      locutor: null,\n      programa: null,\n      ouvintes: 0,\n      equipe: [{\n        habbo: 'Colecction',\n        cargo: 'Web Master'\n      }, {\n        habbo: ',Abobado',\n        cargo: 'Web Master'\n      }, {\n        habbo: 'Sven',\n        cargo: 'Web Master'\n      }, {\n        habbo: 'Renato_Moura',\n        cargo: 'Administrador de ConteÃºdo'\n      }, {\n        habbo: '.:Root:.',\n        cargo: 'Jornalista'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"radioNewStatus\",\n    value: function radioNewStatus(type, newText) {\n      switch (type) {\n        case 'locutor':\n          this.setState({\n            locutor: newText\n          });\n          break;\n\n        case 'programa':\n          this.setState({\n            programa: newText\n          });\n          break;\n\n        case 'ouvintes':\n          this.setState({\n            ouvintes: newText\n          });\n          break;\n      }\n    }\n  }, {\n    key: \"radioUpdate\",\n    value: function radioUpdate(action) {\n      var _this2 = this;\n\n      this.radioNewStatus(action, null);\n      fetch('https://painel.audiovox.pw/api/Njc2OCsw').then(function (response) {\n        return response.text();\n      }).then(function (str) {\n        return new window.DOMParser().parseFromString(str, \"text/xml\");\n      }).then(function (data) {\n        var status = xmlToJson(data).info;\n\n        switch (action) {\n          case 'all':\n            _this2.radioNewStatus('locutor', status.titulo['#text']);\n\n            _this2.radioNewStatus('programa', status.genero['#text']);\n\n            _this2.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n\n            break;\n\n          case 'locutor':\n            _this2.radioNewStatus('locutor', status.titulo['#text']);\n\n            break;\n\n          case 'programa':\n            _this2.radioNewStatus('programa', status.genero['#text']);\n\n            break;\n\n          case 'ouvintes':\n            _this2.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.radioUpdate('all');\n    }\n  }, {\n    key: \"setSlider\",\n    value: function setSlider(value) {\n      if (value > 0) {\n        this.sound.volume(parseFloat(value));\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (window.Howler._muted == true) {\n        window.Howler.mute(false);\n        this.setState({\n          status: 'stop'\n        });\n      } else {\n        window.Howler.mute(true);\n        this.setState({\n          status: 'play'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          stream = _this$state.stream,\n          format = _this$state.format,\n          status = _this$state.status,\n          volume = _this$state.volume;\n      return __jsx(React.Fragment, null, __jsx(ReactHowler, {\n        src: stream,\n        autoplay: true,\n        volume: 1.0,\n        html5: true,\n        format: format,\n        ref: function ref(_ref) {\n          return _this3.sound = _ref;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"backdrop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, \"Equipe\"), this.state.equipe.map(function (membro) {\n        return __jsx(\"span\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 65\n          }\n        }, __jsx(\"img\", {\n          \"data-tip\": \"Colecction\",\n          src: \"https://www.habbo.com.br/habbo-imaging/avatarimage?hb=image&user=Colecction&headonly=1&direction=2&head_direction=2&action=&gesture=&size=m\",\n          alt: \"\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }\n        }), __jsx(ReactTooltip, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }\n        }));\n      })))), __jsx(\"div\", {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"radial\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"player\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status-avatar\",\n        style: {\n          backgroundImage: \"url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=\".concat(this.state.locutor == null ? 'Colecction' : this.state.locutor, \"&direction=2&head_direction=2&gesture=sml&size=b)\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }), __jsx(\"div\", {\n        className: \"radio-status-data\",\n        onClick: function onClick() {\n          return _this3.radioUpdate('locutor');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, this.state.locutor == null ? __jsx(\"img\", {\n        src: \"img/loading.gif\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 60\n        }\n      }) : this.state.locutor), __jsx(\"div\", {\n        className: \"radio-status-data\",\n        onClick: function onClick() {\n          return _this3.radioUpdate('programa');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }, this.state.programa == null ? __jsx(\"img\", {\n        src: \"img/loading.gif\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 61\n        }\n      }) : this.state.programa)), __jsx(ReactSlider, {\n        className: \"radio-slider\",\n        trackClassName: \"radio-slider-control\",\n        onChange: function onChange(value) {\n          return _this3.setSlider(value / 100);\n        },\n        min: 0,\n        defaultValue: volume,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"radio-status-data-listeners\",\n        onClick: function onClick() {\n          return _this3.radioUpdate('ouvintes');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, !this.state.ouvintes ? __jsx(\"img\", {\n        src: \"img/loading.gif\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 50\n        }\n      }) : this.state.ouvintes, __jsx(\"div\", {\n        className: \"radio-status-data-listeners-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, \"ouvintes\"))), __jsx(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"vacancies\",\n        onClick: function onClick() {\n          return alert('Not now!');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, \"Vagas\"), __jsx(\"div\", {\n        className: \"control \".concat(status),\n        onClick: function onClick() {\n          return _this3.toggle();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }), __jsx(\"div\", {\n        className: \"team\",\n        onClick: function onClick() {\n          return alert('Not now!');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }\n      }, \"Equipe\"))));\n    }\n  }]);\n\n  return Index;\n}(Component); // Index.getInitialProps = async function() {\n//     const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n//     const data = await res.json();\n//     return {\n//         radio: data\n//     };\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/lucas/Desktop/habbobr-manutencao/pages/index.js"],"names":["Component","ReactHowler","ReactTooltip","ReactSlider","xmlToJson","Index","props","state","stream","status","format","volume","locutor","programa","ouvintes","equipe","habbo","cargo","type","newText","setState","action","radioNewStatus","fetch","then","response","text","str","window","DOMParser","parseFromString","data","info","titulo","genero","ouvintes_conectados","radioUpdate","value","sound","parseFloat","Howler","_muted","mute","ref","map","membro","backgroundImage","setSlider","alert","toggle"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ReactHowler from 'react-howler'\nimport ReactTooltip from \"react-tooltip\";\nimport ReactSlider from 'react-slider';\nimport xmlToJson from '../helpers/xmlToJson';\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n            status: 'stop',\n            format: ['mp3', 'acc'],\n            volume: 100,\n            locutor: null,\n            programa: null,\n            ouvintes: 0,\n            equipe: [\n                {\n                    habbo: 'Colecction',\n                    cargo: 'Web Master'\n                },\n                {\n                    habbo: ',Abobado',\n                    cargo: 'Web Master'\n                },\n                {\n                    habbo: 'Sven',\n                    cargo: 'Web Master'\n                },\n                {\n                    habbo: 'Renato_Moura',\n                    cargo: 'Administrador de ConteÃºdo'\n                },\n                {\n                    habbo: '.:Root:.',\n                    cargo: 'Jornalista'\n                }\n            ]\n        }\n    }\n\n    radioNewStatus(type, newText){\n        switch (type) {\n            case 'locutor':\n                this.setState({ locutor: newText });\n                break;\n            case 'programa':\n                this.setState({ programa: newText });\n                break;\n            case 'ouvintes':\n                this.setState({ ouvintes: newText });\n                break;\n        }\n    }\n\n    radioUpdate(action) {\n        this.radioNewStatus(action, null);\n    \n        fetch('https://painel.audiovox.pw/api/Njc2OCsw').then(response => response.text()).then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\")).then(data => {\n            let status = xmlToJson(data).info;\n            switch (action) {\n                case 'all':\n                    this.radioNewStatus('locutor', status.titulo['#text']);\n                    this.radioNewStatus('programa', status.genero['#text']);\n                    this.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n                    break;\n                case 'locutor':\n                    this.radioNewStatus('locutor', status.titulo['#text']);\n                    break;\n                case 'programa':\n                    this.radioNewStatus('programa', status.genero['#text']);\n                    break;\n                case 'ouvintes':\n                    this.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n                    break;\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.radioUpdate('all');\n    }\n\n    setSlider(value) {\n        if(value > 0) {\n            this.sound.volume(parseFloat(value));\n        }\n    }\n\n    toggle() {\n        if(window.Howler._muted == true) {\n            window.Howler.mute(false);\n            this.setState({ status: 'stop' });\n        } else {\n            window.Howler.mute(true);\n            this.setState({ status: 'play' });\n        }\n    }\n\n    render() {\n        let { stream, format, status, volume } = this.state;\n\n        return (\n            <>\n                <ReactHowler\n                    src={stream}\n                    autoplay={true}\n                    volume={1.0}\n                    html5={true}\n                    format={format}\n                    ref={(ref) => (this.sound = ref)}\n                />\n\n                <div className=\"backdrop\">\n                    <div className=\"content\">\n                        <div className=\"panel\">\n                            <h1>Equipe</h1>\n                            {this.state.equipe.map((membro) => (<span>\n                                <img data-tip=\"Colecction\" src=\"https://www.habbo.com.br/habbo-imaging/avatarimage?hb=image&user=Colecction&headonly=1&direction=2&head_direction=2&action=&gesture=&size=m\" alt=\"\"/>\n                                <ReactTooltip />\n                            </span>))}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"background\"></div>\n                <div className=\"radial\"></div>\n\n                <div className=\"player\">\n                    <div className=\"radio-status\">\n                        <div\n                            className=\"radio-status-avatar\"\n                            style={{\n                                backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${this.state.locutor == null ? 'Colecction' : this.state.locutor}&direction=2&head_direction=2&gesture=sml&size=b)`\n                            }}\n                        />\n                        <div className=\"radio-status-data\" onClick={() => this.radioUpdate('locutor')}>\n                            {this.state.locutor == null ? (<img src=\"img/loading.gif\" alt=\"\" />) : this.state.locutor}\n                        </div>\n                        <div className=\"radio-status-data\" onClick={() => this.radioUpdate('programa')}>\n                            {this.state.programa == null ? (<img src=\"img/loading.gif\" alt=\"\" />) : this.state.programa}\n                        </div>\n                    </div>\n\n                    <ReactSlider\n                        className=\"radio-slider\"\n                        trackClassName=\"radio-slider-control\"\n                        onChange={(value) => this.setSlider(value / 100)}\n                        min={0}\n                        defaultValue={volume}\n                    />\n\n                    <div className=\"radio-status-data-listeners\" onClick={() => this.radioUpdate('ouvintes')}>\n                        {!this.state.ouvintes ? (<img src=\"img/loading.gif\" alt=\"\" />) : this.state.ouvintes}\n                        <div className=\"radio-status-data-listeners-text\">ouvintes</div>\n                    </div>\n                </div>\n\n                <div className=\"center\">\n                    <div className=\"logo\">\n                        <div className=\"vacancies\" onClick={() => alert('Not now!')}>Vagas</div>\n                        <div className={`control ${status}`} onClick={() => this.toggle() }></div>\n                        <div className=\"team\" onClick={() => alert('Not now!')}>Equipe</div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\n// Index.getInitialProps = async function() {\n//     const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n//     const data = await res.json();\n  \n//     return {\n//         radio: data\n//     };\n// };\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}