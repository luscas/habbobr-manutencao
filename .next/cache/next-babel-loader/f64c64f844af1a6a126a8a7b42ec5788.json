{"ast":null,"code":"var _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\nimport xmlToJson from '../helpers/xmlToJson';\n\nlet toggle = () => {\n  let audio = document.querySelector('.react-audio-player');\n\n  if (audio.volume == 0) {\n    audio.volume = 1;\n  } else {\n    audio.volume = 0;\n  }\n};\n\nconst Index = props => {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"radial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"radio-status-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"radio-status-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \"AutoDJ\"), __jsx(\"div\", {\n    className: \"radio-status-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"Zona Livre\")), __jsx(ReactSlider, {\n    className: \"radio-slider\",\n    trackClassName: \"radio-slider-control\",\n    onChange: value => document.querySelector('.react-audio-player').volume = value / 100,\n    defaultValue: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"radio-status-data-listeners\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"7\", __jsx(\"div\", {\n    className: \"radio-status-data-listeners-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"ouvintes\"))), __jsx(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"vacancies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Vagas\"), __jsx(\"div\", {\n    className: \"control play\",\n    onClick: () => toggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"team\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Equipe\")))), __jsx(ReactAudioPlayer, {\n    src: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n    autoPlay: true,\n    controls: true,\n    listenInterval: \"1000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n};\n\nIndex.getInitialProps = async function () {\n  ument.querySelector('.programa').textContent = status.genero['#text']; //     })\n\n  const res = await fetch('https://painel.audiovox.pw/api/Njc2OCsw');\n  const text = await res.text();\n  const data = xmlToJson(new window.DOMParser().parseFromString(data, 'text/xml'));\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["Component","ReactAudioPlayer","ReactSlider","fetch","xmlToJson","toggle","audio","document","querySelector","volume","Index","props","value","getInitialProps","ument","textContent","status","genero","res","text","data","window","DOMParser","parseFromString","console","log","length","shows","map","entry","show"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport ReactSlider from 'react-slider';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport xmlToJson from '../helpers/xmlToJson';\r\n\r\nlet toggle = () => {\r\n    let audio = document.querySelector('.react-audio-player');\r\n    \r\n    if(audio.volume == 0) {\r\n        audio.volume = 1;\r\n    } else {\r\n        audio.volume = 0;\r\n    }\r\n}\r\n\r\nconst Index = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"background\"></div>\r\n            <div className=\"radial\"></div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"player\">\r\n                    <div className=\"radio-status\">\r\n                        <div className=\"radio-status-avatar\"></div>\r\n                        <div className=\"radio-status-data\">AutoDJ</div>\r\n                        <div className=\"radio-status-data\">Zona Livre</div>\r\n                    </div>\r\n\r\n                    {/* <RadioSlider /> */}\r\n                    <ReactSlider\r\n                        className=\"radio-slider\"\r\n                        trackClassName=\"radio-slider-control\"\r\n                        onChange={(value) => document.querySelector('.react-audio-player').volume = (value / 100)}\r\n                        defaultValue={100}\r\n                    />\r\n\r\n                    {/* <div className=\"radio-slider\">\r\n                        <div className=\"radio-slider-control\"></div>\r\n                    </div> */}\r\n\r\n                    <div className=\"radio-status-data-listeners\">\r\n                        7\r\n                        <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"center\">\r\n                    <div className=\"logo\">\r\n                        <div className=\"vacancies\">Vagas</div>\r\n                        <div className=\"control play\" onClick={() => toggle() }></div>\r\n                        <div className=\"team\">Equipe</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <ReactAudioPlayer\r\n                src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                autoPlay\r\n                controls\r\n                listenInterval={\"1000\"}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nIndex.getInitialProps = async function() {ument.querySelector('.programa').textContent = status.genero['#text'];\r\n    //     })\r\n    const res = await fetch('https://painel.audiovox.pw/api/Njc2OCsw');\r\n    const text = await res.text();\r\n    const data = xmlToJson((new window.DOMParser()).parseFromString(data, 'text/xml'));\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n  \r\n    return {\r\n      shows: data.map(entry => entry.show)\r\n    };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}