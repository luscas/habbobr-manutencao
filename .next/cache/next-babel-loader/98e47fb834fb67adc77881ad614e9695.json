{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Desktop/habbobr-manutencao/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport ReactHowler from 'react-howler'; // import ReactAudioPlayer from 'react-audio-player';\n\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n      status: 'stop',\n      format: ['mp3', 'acc']\n    };\n  }\n\n  setSlider(value) {\n    if (value > 0) {\n      setStatus('stop');\n    } else {\n      setStatus('play');\n    }\n\n    if (value > 0) {\n      document.querySelector('.react-audio-player').volume = parseFloat(value);\n    }\n  }\n\n  toggle() {\n    if (sound.mute(true, 1) == true) {\n      sound.volume(0.0, 1);\n      setStatus('stop');\n    } else {\n      sound.volume(1.0, 1);\n      setStatus('play');\n    }\n\n    console.log(sound.playing(1));\n  }\n\n  render() {\n    let {\n      stream,\n      format,\n      status\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(ReactHowler, {\n      src: stream,\n      autoplay: true,\n      volume: 1.0,\n      html5: true,\n      format: format,\n      ref: ref => this.sound = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"radial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status-avatar\",\n      style: {\n        backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${props.radio.servertitle}&direction=2&head_direction=2&gesture=sml&size=b)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, props.radio.servertitle), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, props.radio.servergenre)), __jsx(ReactSlider, {\n      className: \"radio-slider\",\n      trackClassName: \"radio-slider-control\",\n      onChange: value => setSlider(value / 100),\n      min: 0,\n      defaultValue: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"radio-status-data-listeners\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, props.radio.currentlisteners == 0 ? 1 : props.radio.currentlisteners, __jsx(\"div\", {\n      className: \"radio-status-data-listeners-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"ouvintes\"))), __jsx(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"vacancies\",\n      onClick: () => alert('Not now!'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, \"Vagas\"), __jsx(\"div\", {\n      className: `control ${status}`,\n      onClick: () => toggle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"team\",\n      onClick: () => alert('Not now!'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Equipe\"))));\n  }\n\n}\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n  const data = await res.json();\n  return {\n    radio: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/lucas/Desktop/habbobr-manutencao/pages/index.js"],"names":["Component","ReactHowler","ReactSlider","fetch","Index","constructor","props","state","stream","status","format","setSlider","value","setStatus","document","querySelector","volume","parseFloat","toggle","sound","mute","console","log","playing","render","ref","backgroundImage","radio","servertitle","servergenre","currentlisteners","alert","getInitialProps","res","data","json"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ReactHowler from 'react-howler'\n// import ReactAudioPlayer from 'react-audio-player';\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n            status: 'stop',\n            format: ['mp3', 'acc']\n        }\n    }\n\n    setSlider(value) {\n        if(value > 0) {\n            setStatus('stop');\n        } else {\n            setStatus('play');\n        }\n\n        if(value > 0) {\n            document.querySelector('.react-audio-player').volume = parseFloat(value);\n        }\n    }\n\n    toggle() {\n        if(sound.mute(true, 1) == true) {\n            sound.volume(0.0, 1);\n            setStatus('stop');\n        } else {\n            sound.volume(1.0, 1);\n            setStatus('play');\n        }\n\n        console.log(sound.playing(1));\n    }\n\n    render() {\n        let { stream, format, status } = this.state;\n\n        return (\n            <>\n                <ReactHowler\n                    src={stream}\n                    autoplay={true}\n                    volume={1.0}\n                    html5={true}\n                    format={format}\n                    ref={(ref) => (this.sound = ref)}\n                />\n\n                <div className=\"background\"></div>\n                <div className=\"radial\"></div>\n\n                <div className=\"player\">\n                    <div className=\"radio-status\">\n                        <div className=\"radio-status-avatar\" style={{ backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${props.radio.servertitle}&direction=2&head_direction=2&gesture=sml&size=b)` }}></div>\n                        <div className=\"radio-status-data\">{props.radio.servertitle}</div>\n                        <div className=\"radio-status-data\">{props.radio.servergenre}</div>\n                    </div>\n\n                    {/* <RadioSlider /> */}\n                    <ReactSlider\n                        className=\"radio-slider\"\n                        trackClassName=\"radio-slider-control\"\n                        onChange={(value) => setSlider(value / 100)}\n                        min={0}\n                        defaultValue={100}\n                    />\n\n                    <div className=\"radio-status-data-listeners\">\n                        {props.radio.currentlisteners == 0 ? 1 : props.radio.currentlisteners}\n                        <div className=\"radio-status-data-listeners-text\">ouvintes</div>\n                    </div>\n                </div>\n\n                <div className=\"center\">\n                    <div className=\"logo\">\n                        <div className=\"vacancies\" onClick={() => alert('Not now!')}>Vagas</div>\n                        <div className={`control ${status}`} onClick={() => toggle() }></div>\n                        <div className=\"team\" onClick={() => alert('Not now!')}>Equipe</div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nIndex.getInitialProps = async function() {\n    const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n    const data = await res.json();\n  \n    return {\n        radio: data\n    };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}