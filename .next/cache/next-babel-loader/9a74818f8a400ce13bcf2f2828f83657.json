{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lucas/Desktop/habbobr-manutencao/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport ReactHowler from 'react-howler'; // import ReactAudioPlayer from 'react-audio-player';\n\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n      status: 'stop',\n      format: ['mp3', 'acc'],\n      volume: 100\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"setSlider\",\n    value: function setSlider(value) {\n      if (value > 0) {\n        this.setState({\n          status: 'stop'\n        });\n      } else {\n        this.setState({\n          status: 'play'\n        });\n      }\n\n      if (value > 0) {\n        this.sound.volume(parseFloat(value));\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (window.Howler._muted == true) {\n        window.Howler.mute(false);\n        this.setState({\n          status: 'stop'\n        });\n      } else {\n        window.Howler.mute(false);\n        this.setState({\n          status: 'play'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          stream = _this$state.stream,\n          format = _this$state.format,\n          status = _this$state.status,\n          volume = _this$state.volume;\n      var props = this.props;\n      return __jsx(React.Fragment, null, __jsx(ReactHowler, {\n        src: stream,\n        autoplay: true,\n        volume: 1.0,\n        html5: true,\n        format: format,\n        ref: function ref(_ref) {\n          return _this2.sound = _ref;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"radial\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"player\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status-avatar\",\n        style: {\n          backgroundImage: \"url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=\".concat(props.radio.servertitle, \"&direction=2&head_direction=2&gesture=sml&size=b)\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }), __jsx(\"div\", {\n        className: \"radio-status-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, props.radio.servertitle), __jsx(\"div\", {\n        className: \"radio-status-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, props.radio.servergenre)), __jsx(ReactSlider, {\n        className: \"radio-slider\",\n        trackClassName: \"radio-slider-control\",\n        onChange: function onChange(value) {\n          return _this2.setSlider(value / 100);\n        },\n        min: 0,\n        defaultValue: volume,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"radio-status-data-listeners\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, props.radio.currentlisteners == 0 ? 1 : props.radio.currentlisteners, __jsx(\"div\", {\n        className: \"radio-status-data-listeners-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, \"ouvintes\"))), __jsx(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"vacancies\",\n        onClick: function onClick() {\n          return alert('Not now!');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, \"Vagas\"), __jsx(\"div\", {\n        className: \"control \".concat(status),\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }), __jsx(\"div\", {\n        className: \"team\",\n        onClick: function onClick() {\n          return alert('Not now!');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, \"Equipe\"))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            radio: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/lucas/Desktop/habbobr-manutencao/pages/index.js"],"names":["Component","ReactHowler","ReactSlider","fetch","Index","props","state","stream","status","format","volume","value","setState","sound","parseFloat","window","Howler","_muted","mute","ref","backgroundImage","radio","servertitle","servergenre","setSlider","currentlisteners","alert","toggle","getInitialProps","res","json","data"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ReactHowler from 'react-howler'\n// import ReactAudioPlayer from 'react-audio-player';\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n            status: 'stop',\n            format: ['mp3', 'acc'],\n            volume: 100\n        }\n    }\n\n    setSlider(value) {\n        if(value > 0) {\n            this.setState({ status: 'stop' });\n        } else {\n            this.setState({ status: 'play' });\n        }\n\n        if(value > 0) {\n            this.sound.volume(parseFloat(value));\n        }\n    }\n\n    toggle() {\n        if(window.Howler._muted == true) {\n            window.Howler.mute(false);\n            this.setState({ status: 'stop' });\n        } else {\n            window.Howler.mute(false);\n            this.setState({ status: 'play' });\n        }\n    }\n\n    render() {\n        let { stream, format, status, volume } = this.state;\n        let { props }= this;\n\n        return (\n            <>\n                <ReactHowler\n                    src={stream}\n                    autoplay={true}\n                    volume={1.0}\n                    html5={true}\n                    format={format}\n                    ref={(ref) => (this.sound = ref)}\n                />\n\n                <div className=\"background\"></div>\n                <div className=\"radial\"></div>\n\n                <div className=\"player\">\n                    <div className=\"radio-status\">\n                        <div className=\"radio-status-avatar\" style={{ backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${props.radio.servertitle}&direction=2&head_direction=2&gesture=sml&size=b)` }}></div>\n                        <div className=\"radio-status-data\">{props.radio.servertitle}</div>\n                        <div className=\"radio-status-data\">{props.radio.servergenre}</div>\n                    </div>\n\n                    {/* <RadioSlider /> */}\n                    <ReactSlider\n                        className=\"radio-slider\"\n                        trackClassName=\"radio-slider-control\"\n                        onChange={(value) => this.setSlider(value / 100)}\n                        min={0}\n                        defaultValue={volume}\n                    />\n\n                    <div className=\"radio-status-data-listeners\">\n                        {props.radio.currentlisteners == 0 ? 1 : props.radio.currentlisteners}\n                        <div className=\"radio-status-data-listeners-text\">ouvintes</div>\n                    </div>\n                </div>\n\n                <div className=\"center\">\n                    <div className=\"logo\">\n                        <div className=\"vacancies\" onClick={() => alert('Not now!')}>Vagas</div>\n                        <div className={`control ${status}`} onClick={() => this.toggle() }></div>\n                        <div className=\"team\" onClick={() => alert('Not now!')}>Equipe</div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nIndex.getInitialProps = async function() {\n    const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n    const data = await res.json();\n  \n    return {\n        radio: data\n    };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}