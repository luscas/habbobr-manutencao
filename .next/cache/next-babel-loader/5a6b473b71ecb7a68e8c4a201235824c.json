{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var toggle = function toggle() {\n        var audio = document.querySelector('.react-audio-player');\n\n        if (audio.volume == 0) {\n          audio.volume = 1;\n        } else {\n          audio.volume = 0;\n        }\n      };\n\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"radial\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"player\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status-avatar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        className: \"radio-status-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }\n      }, \"AutoDJ\"), __jsx(\"div\", {\n        className: \"radio-status-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }\n      }, \"Zona Livre\")), __jsx(RadioSlider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      }), __jsx(\"div\", {\n        className: \"radio-status-data-listeners\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, \"7\", __jsx(\"div\", {\n        className: \"radio-status-data-listeners-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }, \"ouvintes\"))), __jsx(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"vacancies\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, \"Vagas\"), __jsx(\"div\", {\n        className: \"control play\",\n        onClick: function onClick() {\n          return toggle();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        className: \"team\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }, \"Equipe\")))), __jsx(ReactAudioPlayer, {\n        src: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n        autoPlay: true,\n        controls: true,\n        listenInterval: \"1000\",\n        ref: function ref(element) {\n          _this.player = element;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["Component","ReactAudioPlayer","Index","toggle","audio","document","querySelector","volume","element","player"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;IAEMC,K;;;;;;;;;;;;;6BACO;AAAA;;AACL,UAAIC,MAAM,GAAG,SAATA,MAAS,GAAM;AACf,YAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAZ;;AAEA,YAAGF,KAAK,CAACG,MAAN,IAAgB,CAAnB,EAAsB;AAClBH,UAAAA,KAAK,CAACG,MAAN,GAAe,CAAf;AACH,SAFD,MAEO;AACHH,UAAAA,KAAK,CAACG,MAAN,GAAe,CAAf;AACH;AACJ,OARD;;AAUA,aACI,4BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CADJ,EAOI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAaI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAbJ,CADJ,EAoBI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,OAAO,EAAE;AAAA,iBAAMJ,MAAM,EAAZ;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ,CApBJ,CAJJ,EAiCI,MAAC,gBAAD;AACI,QAAA,GAAG,EAAC,iDADR;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,cAAc,EAAE,MAJpB;AAKI,QAAA,GAAG,EAAE,aAACK,OAAD,EAAa;AAAE,UAAA,KAAI,CAACC,MAAL,GAAcD,OAAd;AAAuB,SAL/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjCJ,CADJ;AA2CH;;;;EAvDeR,S;;AA0DpB,eAAeE,KAAf","sourcesContent":["import { Component } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\nclass Index extends Component {\r\n    render() {\r\n        let toggle = () => {\r\n            let audio = document.querySelector('.react-audio-player');\r\n            \r\n            if(audio.volume == 0) {\r\n                audio.volume = 1;\r\n            } else {\r\n                audio.volume = 0;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"background\"></div>\r\n                <div className=\"radial\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"player\">\r\n                        <div className=\"radio-status\">\r\n                            <div className=\"radio-status-avatar\"></div>\r\n                            <div className=\"radio-status-data\">AutoDJ</div>\r\n                            <div className=\"radio-status-data\">Zona Livre</div>\r\n                        </div>\r\n\r\n                        <RadioSlider />\r\n\r\n                        {/* <div className=\"radio-slider\">\r\n                            <div className=\"radio-slider-control\"></div>\r\n                        </div> */}\r\n\r\n                        <div className=\"radio-status-data-listeners\">\r\n                            7\r\n                            <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"center\">\r\n                        <div className=\"logo\">\r\n                            <div className=\"vacancies\">Vagas</div>\r\n                            <div className=\"control play\" onClick={() => toggle() }></div>\r\n                            <div className=\"team\">Equipe</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <ReactAudioPlayer\r\n                    src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                    autoPlay\r\n                    controls\r\n                    listenInterval={\"1000\"}\r\n                    ref={(element) => { this.player = element }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}