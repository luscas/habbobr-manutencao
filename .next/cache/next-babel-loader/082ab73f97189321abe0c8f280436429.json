{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Desktop/habbobr-manutencao/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport ReactHowler from 'react-howler'; // import ReactAudioPlayer from 'react-audio-player';\n\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n      status: 'stop',\n      format: ['mp3', 'acc'],\n      volume: 100\n    };\n  }\n\n  radio() {}\n\n  setSlider(value) {\n    if (value > 0) {\n      this.sound.volume(parseFloat(value));\n    }\n  }\n\n  toggle() {\n    if (window.Howler._muted == true) {\n      window.Howler.mute(false);\n      this.setState({\n        status: 'stop'\n      });\n    } else {\n      window.Howler.mute(true);\n      this.setState({\n        status: 'play'\n      });\n    }\n  }\n\n  render() {\n    let {\n      stream,\n      format,\n      status,\n      volume\n    } = this.state;\n    let {\n      props\n    } = this;\n    return __jsx(React.Fragment, null, __jsx(ReactHowler, {\n      src: stream,\n      autoplay: true,\n      volume: 1.0,\n      html5: true,\n      format: format,\n      ref: ref => this.sound = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"radial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"...\"), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \"...\")), __jsx(ReactSlider, {\n      className: \"radio-slider\",\n      trackClassName: \"radio-slider-control\",\n      onChange: value => this.setSlider(value / 100),\n      min: 0,\n      defaultValue: volume,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"radio-status-data-listeners\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, props.radio.currentlisteners == 0 ? 1 : props.radio.currentlisteners, __jsx(\"div\", {\n      className: \"radio-status-data-listeners-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"ouvintes\"))), __jsx(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"vacancies\",\n      onClick: () => alert('Not now!'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Vagas\"), __jsx(\"div\", {\n      className: `control ${status}`,\n      onClick: () => this.toggle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"team\",\n      onClick: () => alert('Not now!'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, \"Equipe\"))));\n  }\n\n} // Index.getInitialProps = async function() {\n//     const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n//     const data = await res.json();\n//     return {\n//         radio: data\n//     };\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/lucas/Desktop/habbobr-manutencao/pages/index.js"],"names":["Component","ReactHowler","ReactSlider","fetch","Index","constructor","props","state","stream","status","format","volume","radio","setSlider","value","sound","parseFloat","toggle","window","Howler","_muted","mute","setState","render","ref","currentlisteners","alert"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ReactHowler from 'react-howler'\n// import ReactAudioPlayer from 'react-audio-player';\nimport ReactSlider from 'react-slider';\nimport fetch from 'isomorphic-unfetch';\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stream: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n            status: 'stop',\n            format: ['mp3', 'acc'],\n            volume: 100\n        }\n    }\n\n    radio() {\n\n    }\n\n    setSlider(value) {\n        if(value > 0) {\n            this.sound.volume(parseFloat(value));\n        }\n    }\n\n    toggle() {\n        if(window.Howler._muted == true) {\n            window.Howler.mute(false);\n            this.setState({ status: 'stop' });\n        } else {\n            window.Howler.mute(true);\n            this.setState({ status: 'play' });\n        }\n    }\n\n    render() {\n        let { stream, format, status, volume } = this.state;\n        let { props }= this;\n\n        return (\n            <>\n                <ReactHowler\n                    src={stream}\n                    autoplay={true}\n                    volume={1.0}\n                    html5={true}\n                    format={format}\n                    ref={(ref) => (this.sound = ref)}\n                />\n\n                <div className=\"background\"></div>\n                <div className=\"radial\"></div>\n\n                <div className=\"player\">\n                    <div className=\"radio-status\">\n                        <div className=\"radio-status-avatar\"></div>\n                        <div className=\"radio-status-data\">...</div>\n                        <div className=\"radio-status-data\">...</div>\n                    </div>\n\n                    {/* <RadioSlider /> */}\n                    <ReactSlider\n                        className=\"radio-slider\"\n                        trackClassName=\"radio-slider-control\"\n                        onChange={(value) => this.setSlider(value / 100)}\n                        min={0}\n                        defaultValue={volume}\n                    />\n\n                    <div className=\"radio-status-data-listeners\">\n                        {props.radio.currentlisteners == 0 ? 1 : props.radio.currentlisteners}\n                        <div className=\"radio-status-data-listeners-text\">ouvintes</div>\n                    </div>\n                </div>\n\n                <div className=\"center\">\n                    <div className=\"logo\">\n                        <div className=\"vacancies\" onClick={() => alert('Not now!')}>Vagas</div>\n                        <div className={`control ${status}`} onClick={() => this.toggle() }></div>\n                        <div className=\"team\" onClick={() => alert('Not now!')}>Equipe</div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\n// Index.getInitialProps = async function() {\n//     const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n//     const data = await res.json();\n  \n//     return {\n//         radio: data\n//     };\n// };\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}