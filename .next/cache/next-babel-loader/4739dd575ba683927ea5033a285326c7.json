{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react'; // import ReactAudioPlayer from 'react-audio-player';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      audio: null\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var streamURL = \"https://player.audiovox.pw/proxy/6768/;\";\n      var audio = document.getElementById(\"main-stream\");\n      this.setState({\n        audio: document.getElementById(\"main-stream\")\n      });\n      audio.innerHTML = '<source id=\"main-stream-source\" src=\"' + streamURL + '\">';\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var audio = this.state.audio;\n      var promise = audio.play();\n      audio.volume = 1;\n      audio.muted = false;\n\n      if (promise !== undefined) {\n        promise.then(function (_) {\n          console.log(\"[PlayerFrame] Play successful\");\n          localStorage.setItem('radio_play', 'allowed');\n        })[\"catch\"](function (error) {\n          console.log(\"[PlayerFrame] Play failed\", error);\n          localStorage.setItem('radio_play', 'not_allowed');\n        });\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var audio = this.state.audio;\n      audio.volume = 0;\n      audio.muted = true;\n      localStorage.setItem('radio_play', 'paused');\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var audio = this.state.audio;\n\n      if (audio.volume == 0 || audio.muted == true) {}\n\n      audio.volume = 0;\n      audio.muted = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // let toggle = () => {\n      //     let el = document.querySelector('.react-audio-player');\n      //     if(el.volume == 0) {\n      //         el.volume = 1.0;\n      //     } else {\n      //         el.volume = 0;\n      //     }\n      // }\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"radial\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"player\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-status-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, \"AutoDJ\"), __jsx(\"div\", {\n        className: \"radio-status-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      }, \"Zona Livre\")), __jsx(\"div\", {\n        className: \"radio-slider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"radio-slider-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"radio-status-data-listeners\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, \"7\", __jsx(\"div\", {\n        className: \"radio-status-data-listeners-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }, \"ouvintes\"))), __jsx(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"vacancies\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }, \"Vagas\"), __jsx(\"div\", {\n        className: \"control play\",\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        className: \"team\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, \"Equipe\")))), __jsx(\"audio\", {\n        id: \"main-stream\",\n        preload: \"none\",\n        type: \"audio/mp3\",\n        volume: \"0\",\n        muted: true,\n        controls: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["Component","Index","props","state","audio","streamURL","document","getElementById","setState","innerHTML","promise","play","volume","muted","undefined","then","_","console","log","localStorage","setItem","error","toggle"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\n// import ReactAudioPlayer from 'react-audio-player';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            audio: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let streamURL = \"https://player.audiovox.pw/proxy/6768/;\";\r\n        let audio = document.getElementById(\"main-stream\");\r\n\r\n        this.setState({\r\n            audio: document.getElementById(\"main-stream\")\r\n        })\r\n\r\n        audio.innerHTML = '<source id=\"main-stream-source\" src=\"' + streamURL + '\">';\r\n    }\r\n\r\n    play() {\r\n        let audio = this.state.audio;\r\n        var promise = audio.play();\r\n        audio.volume = 1;\r\n        audio.muted = false;\r\n\r\n        if (promise !== undefined) {\r\n            promise.then(_ => {\r\n                console.log(\"[PlayerFrame] Play successful\");\r\n\r\n                localStorage.setItem('radio_play', 'allowed');\r\n            }).catch(error => {\r\n                console.log(\"[PlayerFrame] Play failed\", error);\r\n\r\n                localStorage.setItem('radio_play', 'not_allowed');\r\n            });\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        let audio = this.state.audio;\r\n        audio.volume = 0;\r\n        audio.muted = true;\r\n\r\n        localStorage.setItem('radio_play', 'paused');\r\n    }\r\n\r\n    toggle() {\r\n        let audio = this.state.audio;\r\n        if(audio.volume == 0 || audio.muted == true) {}\r\n        audio.volume = 0;\r\n        audio.muted = true;\r\n    }\r\n\r\n    render() {\r\n        // let toggle = () => {\r\n        //     let el = document.querySelector('.react-audio-player');\r\n\r\n        //     if(el.volume == 0) {\r\n        //         el.volume = 1.0;\r\n        //     } else {\r\n        //         el.volume = 0;\r\n        //     }\r\n        // }\r\n        return (\r\n            <>\r\n                <div className=\"background\"></div>\r\n                <div className=\"radial\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"player\">\r\n                        <div className=\"radio-status\">\r\n                            <div className=\"radio-status-data\">AutoDJ</div>\r\n                            <div className=\"radio-status-data\">Zona Livre</div>\r\n                        </div>\r\n\r\n                        <div className=\"radio-slider\">\r\n                            <div className=\"radio-slider-control\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"radio-status-data-listeners\">\r\n                            7\r\n                            <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"center\">\r\n                        <div className=\"logo\">\r\n                            <div className=\"vacancies\">Vagas</div>\r\n                            <div className=\"control play\" onClick={() => this.toggle() }></div>\r\n                            <div className=\"team\">Equipe</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <ReactAudioPlayer\r\n                    src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                    autoPlay\r\n                    controls\r\n                    ref={this.state.audio}\r\n                /> */}\r\n\r\n                <audio id=\"main-stream\" preload=\"none\" type=\"audio/mp3\" volume=\"0\" muted controls />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}