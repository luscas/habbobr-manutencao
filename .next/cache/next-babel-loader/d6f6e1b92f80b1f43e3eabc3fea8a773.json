{"ast":null,"code":"var _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\n\nclass Index extends Component {\n  render() {\n    let toggle = () => {\n      let audio = document.querySelector('.react-audio-player');\n\n      if (audio.volume == 0) {\n        audio.volume = 1;\n      } else {\n        audio.volume = 0;\n      }\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"radial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, \"AutoDJ\"), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, \"Zona Livre\")), __jsx(\"div\", {\n      className: \"radio-slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-slider-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"radio-status-data-listeners\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, \"7\", __jsx(\"div\", {\n      className: \"radio-status-data-listeners-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, \"ouvintes\"))), __jsx(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"vacancies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, \"Vagas\"), __jsx(\"div\", {\n      className: \"control play\",\n      onClick: () => toggle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }), __jsx(\"div\", {\n      className: \"team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, \"Equipe\")))), __jsx(ReactAudioPlayer, {\n      src: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n      autoplay: true,\n      controls: true,\n      listenInterval: true,\n      ref: element => {\n        this.player = element;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["Component","ReactAudioPlayer","Index","render","toggle","audio","document","querySelector","volume","element","player"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,MAAM,GAAG;AACL,QAAIC,MAAM,GAAG,MAAM;AACf,UAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAZ;;AAEA,UAAGF,KAAK,CAACG,MAAN,IAAgB,CAAnB,EAAsB;AAClBH,QAAAA,KAAK,CAACG,MAAN,GAAe,CAAf;AACH,OAFD,MAEO;AACHH,QAAAA,KAAK,CAACG,MAAN,GAAe,CAAf;AACH;AACJ,KARD;;AAUA,WACI,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,EAUI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEI;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAVJ,CADJ,EAiBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAE,MAAMJ,MAAM,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CAjBJ,CAJJ,EA8BI,MAAC,gBAAD;AACI,MAAA,GAAG,EAAC,iDADR;AAEI,MAAA,QAAQ,MAFZ;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,cAAc,MAJlB;AAKI,MAAA,GAAG,EAAGK,OAAD,IAAa;AAAE,aAAKC,MAAL,GAAcD,OAAd;AAAuB,OAL/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,CADJ;AAwCH;;AApDyB;;AAuD9B,eAAeP,KAAf","sourcesContent":["import { Component } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\nclass Index extends Component {\r\n    render() {\r\n        let toggle = () => {\r\n            let audio = document.querySelector('.react-audio-player');\r\n            \r\n            if(audio.volume == 0) {\r\n                audio.volume = 1;\r\n            } else {\r\n                audio.volume = 0;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"background\"></div>\r\n                <div className=\"radial\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"player\">\r\n                        <div className=\"radio-status\">\r\n                            <div className=\"radio-status-data\">AutoDJ</div>\r\n                            <div className=\"radio-status-data\">Zona Livre</div>\r\n                        </div>\r\n\r\n                        <div className=\"radio-slider\">\r\n                            <div className=\"radio-slider-control\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"radio-status-data-listeners\">\r\n                            7\r\n                            <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"center\">\r\n                        <div className=\"logo\">\r\n                            <div className=\"vacancies\">Vagas</div>\r\n                            <div className=\"control play\" onClick={() => toggle() }></div>\r\n                            <div className=\"team\">Equipe</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <ReactAudioPlayer\r\n                    src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                    autoplay\r\n                    controls\r\n                    listenInterval\r\n                    ref={(element) => { this.player = element }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}