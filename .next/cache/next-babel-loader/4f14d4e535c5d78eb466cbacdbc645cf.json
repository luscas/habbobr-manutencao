{"ast":null,"code":"var _jsxFileName = \"C:\\\\www\\\\habbobr-manutencao\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Component } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport ReactSlider from 'react-slider';\n\nclass Index extends Component {\n  componentDidUpdate() {\n    console.log(this.state.valueNow);\n  }\n\n  render() {\n    let audio = () => document.querySelector('.react-audio-player');\n\n    let toggle = () => {\n      let audio = audio();\n\n      if (audio.volume == 0) {\n        audio.volume = 1;\n      } else {\n        audio.volume = 0;\n      }\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"radial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"radio-status-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, \"AutoDJ\"), __jsx(\"div\", {\n      className: \"radio-status-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }, \"Zona Livre\")), __jsx(ReactSlider, {\n      className: \"radio-slider\",\n      trackClassName: \"radio-slider-control\",\n      onChange: value => audio().volume = value,\n      minDistance: 20,\n      defaultValue: 100,\n      renderThumb: (props, state) => __jsx(\"div\", _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 60\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"radio-status-data-listeners\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"7\", __jsx(\"div\", {\n      className: \"radio-status-data-listeners-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"ouvintes\"))), __jsx(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"vacancies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Vagas\"), __jsx(\"div\", {\n      className: \"control play\",\n      onClick: () => toggle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }), __jsx(\"div\", {\n      className: \"team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \"Equipe\")))), __jsx(ReactAudioPlayer, {\n      src: \"https://player.audiovox.pw/proxy/6768/;type=mp3\",\n      autoPlay: true,\n      controls: true,\n      listenInterval: \"1000\",\n      ref: element => {\n        this.player = element;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/www/habbobr-manutencao/pages/index.js"],"names":["Component","ReactAudioPlayer","ReactSlider","Index","componentDidUpdate","console","log","state","valueNow","render","audio","document","querySelector","toggle","volume","value","props","element","player"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport ReactSlider from 'react-slider';\r\n\r\nclass Index extends Component {\r\n    componentDidUpdate() {\r\n        console.log(this.state.valueNow);\r\n    }\r\n\r\n    render() {\r\n        let audio = () => document.querySelector('.react-audio-player');\r\n        let toggle = () => {\r\n            let audio = audio();\r\n            \r\n            if(audio.volume == 0) {\r\n                audio.volume = 1;\r\n            } else {\r\n                audio.volume = 0;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"background\"></div>\r\n                <div className=\"radial\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"player\">\r\n                        <div className=\"radio-status\">\r\n                            <div className=\"radio-status-avatar\"></div>\r\n                            <div className=\"radio-status-data\">AutoDJ</div>\r\n                            <div className=\"radio-status-data\">Zona Livre</div>\r\n                        </div>\r\n\r\n                        {/* <RadioSlider /> */}\r\n                        <ReactSlider\r\n                            className=\"radio-slider\"\r\n                            trackClassName=\"radio-slider-control\"\r\n                            onChange={(value) => audio().volume = value}\r\n                            minDistance={20}\r\n                            defaultValue={100}\r\n                            renderThumb={(props, state) => <div {...props}></div>}\r\n                        />\r\n\r\n                        {/* <div className=\"radio-slider\">\r\n                            <div className=\"radio-slider-control\"></div>\r\n                        </div> */}\r\n\r\n                        <div className=\"radio-status-data-listeners\">\r\n                            7\r\n                            <div className=\"radio-status-data-listeners-text\">ouvintes</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"center\">\r\n                        <div className=\"logo\">\r\n                            <div className=\"vacancies\">Vagas</div>\r\n                            <div className=\"control play\" onClick={() => toggle() }></div>\r\n                            <div className=\"team\">Equipe</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <ReactAudioPlayer\r\n                    src=\"https://player.audiovox.pw/proxy/6768/;type=mp3\"\r\n                    autoPlay\r\n                    controls\r\n                    listenInterval={\"1000\"}\r\n                    ref={(element) => { this.player = element }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}