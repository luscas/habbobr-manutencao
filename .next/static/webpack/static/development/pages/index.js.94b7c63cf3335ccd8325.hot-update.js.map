{"version":3,"file":"static/webpack/static/development/pages/index.js.94b7c63cf3335ccd8325.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from 'react';\nimport ReactHowler from 'react-howler'\nimport ReactTooltip from \"react-tooltip\";\nimport ReactSlider from 'react-slider';\nimport xmlToJson from '../helpers/xmlToJson';\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stream: \"https://player.audiovox.pw/proxy/6768/;\",\n            status: 'stop',\n            format: ['mp3', 'acc'],\n            volume: 100,\n            locutor: null,\n            programa: null,\n            ouvintes: 0,\n            equipe: [\n                {\n                    habbo: 'Colecction',\n                    cargo: 'Web Master'\n                },\n                {\n                    habbo: ',Abobado',\n                    cargo: 'Web Master'\n                },\n                {\n                    habbo: 'Sven',\n                    cargo: 'Web Master'\n                },\n                {\n                    habbo: 'Renato_Moura',\n                    cargo: 'Administrador de Conteúdo'\n                },\n                {\n                    habbo: '.:Root:.',\n                    cargo: 'Jornalista'\n                },\n                {\n                    habbo: 'CaioXzZ',\n                    cargo: 'Locutor'\n                },\n                {\n                    habbo: 'Frats',\n                    cargo: 'Locutor'\n                }\n            ]\n        }\n    }\n\n    radioNewStatus(type, newText){\n        switch (type) {\n            case 'locutor':\n                this.setState({ locutor: newText });\n                break;\n            case 'programa':\n                this.setState({ programa: newText });\n                break;\n            case 'ouvintes':\n                this.setState({ ouvintes: newText });\n                break;\n        }\n    }\n\n    radioUpdate(action) {\n        this.radioNewStatus(action, null);\n    \n        fetch('https://painel.audiovox.pw/api/Njc2OCsw').then(response => response.text()).then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\")).then(data => {\n            let status = xmlToJson(data).info;\n            switch (action) {\n                case 'all':\n                    this.radioNewStatus('locutor', status.titulo['#text']);\n                    this.radioNewStatus('programa', status.genero['#text']);\n                    this.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n                    break;\n                case 'locutor':\n                    this.radioNewStatus('locutor', status.titulo['#text']);\n                    break;\n                case 'programa':\n                    this.radioNewStatus('programa', status.genero['#text']);\n                    break;\n                case 'ouvintes':\n                    this.radioNewStatus('ouvintes', status.ouvintes_conectados['#text']);\n                    break;\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.radioUpdate('all');\n    }\n\n    setSlider(value) {\n        if(value > 0) {\n            this.sound.volume(parseFloat(value));\n        }\n    }\n\n    toggle() {\n        if(window.Howler._muted == true) {\n            window.Howler.mute(false);\n            this.setState({ status: 'stop' });\n        } else {\n            window.Howler.mute(true);\n            this.setState({ status: 'play' });\n        }\n    }\n\n    render() {\n        let { stream, format, status, volume } = this.state;\n\n        return (\n            <>\n                <ReactTooltip\n                    backgroundColor=\"#000\"\n                />\n                <ReactHowler\n                    src={stream}\n                    autoplay={true}\n                    volume={1.0}\n                    html5={true}\n                    format={format}\n                    ref={(ref) => (this.sound = ref)}\n                />\n\n                <input type=\"checkbox\" id=\"close\"/>\n                <div className=\"backdrop\">\n                    <div className=\"content\">\n                        <div className=\"panel\">\n                            <div className=\"header\">\n                                <h1>Equipe</h1>\n\n                                <label htmlFor=\"close\">❌</label>\n                            </div>\n                            <div className=\"equipe\">\n                                {this.state.equipe.map((membro) => (\n                                <div className=\"membro\">\n                                    <img\n                                        data-tip={`${membro.habbo} - ${membro.cargo}`}\n                                        width={33}\n                                        height={56}\n                                        src={`https://www.habbo.com.br/habbo-imaging/avatarimage?hb=image&user=${membro.habbo}&headonly=0&direction=2&head_direction=2&action=&gesture=&size=s`}\n                                        alt={`Habbo ${membro.habbo}`}\n                                    />\n                                    <div class=\"habbo\">{membro.habbo}</div>\n                                </div>))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"background\"></div>\n                <div className=\"radial\"></div>\n\n                <div className=\"player\">\n                    <div className=\"radio-status\">\n                        <div\n                            className=\"radio-status-avatar\"\n                            style={{\n                                backgroundImage: `url(https://www.habbo.com.br/habbo-imaging/avatarimage?img_format=gif&user=${this.state.locutor == null ? 'Colecction' : this.state.locutor}&direction=2&head_direction=2&gesture=sml&size=b)`\n                            }}\n                        />\n                        <div className=\"radio-status-data\" onClick={() => this.radioUpdate('locutor')}>\n                            {this.state.locutor == null ? (<img src=\"img/loading.gif\" alt=\"\" />) : this.state.locutor}\n                        </div>\n                        <div className=\"radio-status-data\" onClick={() => this.radioUpdate('programa')}>\n                            {this.state.programa == null ? (<img src=\"img/loading.gif\" alt=\"\" />) : this.state.programa}\n                        </div>\n                    </div>\n\n                    <ReactSlider\n                        className=\"radio-slider\"\n                        trackClassName=\"radio-slider-control\"\n                        onChange={(value) => this.setSlider(value / 100)}\n                        min={0}\n                        defaultValue={volume}\n                    />\n\n                    <div className=\"radio-status-data-listeners\" onClick={() => this.radioUpdate('ouvintes')}>\n                        {!this.state.ouvintes ? (<img src=\"img/loading.gif\" alt=\"\" />) : this.state.ouvintes}\n                        <div className=\"radio-status-data-listeners-text\">ouvintes</div>\n                    </div>\n                </div>\n\n                <div className=\"center\">\n                    <div className=\"logo\">\n                        <div className=\"vacancies\" onClick={() => alert('vagas@habbobr.org')}>Vagas</div>\n                        <div className={`control ${status}`} onClick={() => this.toggle() }></div>\n                        <label htmlFor=\"close\" className=\"team\">Equipe</label>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\n// Index.getInitialProps = async function() {\n//     const res  = await fetch('http://serv3.audiovox.pw:6768/stats?sid=1&json=1');\n//     const data = await res.json();\n  \n//     return {\n//         radio: data\n//     };\n// };\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAjCA;AAHA;AA0CA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AATA;AAWA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAdA;AAgBA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAggMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}